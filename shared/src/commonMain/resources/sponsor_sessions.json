[
  {
    "groupId": null,
    "groupName": "All",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "480493",
        "title": "The Unyielding Spirit of Android",
        "description": "Uncover the resiliency of the Android community through a collection of real-world anecdotes collected from developers around the world. We’ll explore our past triumphs, from overcoming the technical challenges we faced as developers to persevering through a pandemic and ensuring we’ve stayed connected as a community. Together, we’ll investigate how those experiences have shaped our community, the current inflection point we find ourselves in, and identify actions you can take to keep this story going.",
        "startsAt": "2023-09-14T09:00:00",
        "endsAt": "2023-09-14T10:00:00",
        "isServiceSession": false,
        "isPlenumSession": true,
        "speakers": [
          {
            "id": "b9af7051-03c3-4595-88ca-a1825112ece4",
            "name": "Adam McNeilly"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179212,
                "name": "Keynote"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "500266",
        "title": "Interception",
        "description": "Embrace the Interceptor pattern of software design to create cleaner abstractions, enable flexibility, and set yourself up for writing high quality tests. This versatile approach empowers engineers with unmatched control, adaptability, and seamless integration with dependency injection. Join me to explore how interfaces and protocols serve as the foundation for making code flexible, adaptable and composable.  We’ll talk about high level design playbooks as well as real-world examples you can start using today to leverage this software design pattern.  Examples such as utilizing reflection-based Proxy Objects, employing \"Fakes\" in unit tests, wrapping 3rd party libraries and modifying network traffic.  ",
        "startsAt": "2023-09-14T10:20:00",
        "endsAt": "2023-09-14T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "dd32d92b-40e8-4dcf-a29c-a66ec2473b6f",
            "name": "Sam Edwards"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179196,
                "name": "Testing"
              },
              {
                "id": 179207,
                "name": "Modularization"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "502401",
        "title": "The Art of KMP: what you need to know as a multiplatform developer",
        "description": "There’s a lot of Android learning roadmaps on the internet, which cover some topics every Android developer should be familiar with. All of those can seem trivial to an experienced developer. But almost two years ago I felt like a beginner again - when I started learning KMP.\r\n\r\nJust like when I first started with Android, I wanted to have a structured learning path for my KMP experience. And so I came up with a list to help KMP beginners on their journey, which was converted into a roadmap. Now all the Android learning maps have a continuation and won’t make you feel lost at the fork when you want to keep learning.\r\n\r\nIn this speech we’ll go over the following topics:\r\n- Getting ready for KMP\r\n- Importance of Clean Architecture in KMP\r\n- Reactive UI and Streams\r\n- Multilingual Developers\r\n- Multiplatform teams and Communication\r\n\r\nAnd last but not least, we'll see that art and multiplatform development are surprisingly related! ;)",
        "startsAt": "2023-09-14T10:20:00",
        "endsAt": "2023-09-14T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "6a7c1f8a-784d-46be-8840-9cf519c4bc78",
            "name": "Lena Stepanova"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179190,
                "name": "Cross-Platform"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "524565",
        "title": "Why ANRs are Hard to Solve and What You Can Do to Make it Easier",
        "description": "If you work on Android apps, you probably know that Google has a limit on how many ANRs your app can cause before they reduce the discoverability of your app. So whether you are focused on improving your end-user experience or improving your app's ranking in the app store, reducing the ANRs in your app is important. This session will cover the challenges of discovering and troubleshooting ANRs, and how you can more easily fix ANRs.",
        "startsAt": "2023-09-14T10:20:00",
        "endsAt": "2023-09-14T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "9803750d-3303-4b49-85d0-e772ae01f617",
            "name": "Fredric Newberg"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "518472",
        "title": "Beyond the Basics: Performance Monitoring and User Experience for Mobile App Growth",
        "description": "When interacting with a mobile app that regularly crashes or freezes, 53% of users uninstalled the app, 37% stopped using it, and 28% looked for a replacement. Users are no longer forgiving mobile app mishaps and errors. Going beyond the basic metrics of understanding your user experience and diving deep into mobile performance is key to ensuring growth and positive user experiences. We will highlight which metrics and takeaways mobile teams should track to create a superior app experience that takes into account every user interaction. Find out why app insights, proactive issue detection, advanced debugging, and alert management capabilities should matter to you and the development of your mobile app.",
        "startsAt": "2023-09-14T11:15:00",
        "endsAt": "2023-09-14T11:35:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "6519e3d1-ca80-46b3-99f5-0f77adfdc91f",
            "name": "Sean Higgins"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179185,
                "name": "Lightning talk"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              },
              {
                "id": 179206,
                "name": "Firebase"
              },
              {
                "id": 179209,
                "name": "sponsor"
              },
              {
                "id": 182143,
                "name": "Flutter"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "516048",
        "title": "Be Aware & Prepare: Independent Security Reviews Build User Trust",
        "description": "Looking to set your app apart from the rest on Google Play? For 88% of users, how much personal data they share depends on how much they trust a company. Show customers you safeguard their data and are transparent with your privacy practices by completing a new Independent Security Review and get a badge on your Google Play Data safety declaration. In this session, learn about the new App Defense Alliance (ADA) Mobile App Security Assessment (MASA), launched Fall 2022 and how it can drive your business:\r\n- Learn about the MASA validation process\r\n- Get tips on secure coding practices to speed your validation\r\n- See how & why so many other top Android apps have been validated\r\nGet the inside scoop from NowSecure experts who helped create the ADA MASA framework and who have conducted hundreds of MASA assessments.",
        "startsAt": "2023-09-14T11:15:00",
        "endsAt": "2023-09-14T11:35:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "9b706079-0c5b-4d36-852a-4fbc3a271734",
            "name": "Jonathan Seals"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179185,
                "name": "Lightning talk"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179196,
                "name": "Testing"
              },
              {
                "id": 179203,
                "name": "Security"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "518999",
        "title": "Best practices for shielding mobile apps from emerging threats",
        "description": "Whether it's fraud, data exfiltration, IP theft, or tampering, Android developers have no shortage of threats to address and mitigate. In this talk, Jan Vidar Krey, the head of development for Promon, will unveil the company's latest research in mapping the state of affairs for real-world Android application security. Recently, the company reviewed how 100 of the most-used Android finance apps handled a typical malware attack – 92% were susceptible.\r\n\r\nJan Vidar will then share the practical steps Android developers can take to protect their apps and reduce risk. ",
        "startsAt": "2023-09-14T11:15:00",
        "endsAt": "2023-09-14T11:35:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f6034b1a-7033-4442-9637-051d647a2f1d",
            "name": "Benjamin Adolphi"
          },
          {
            "id": "d68e16ee-df8d-4689-aaa1-8ee9c230476f",
            "name": "Jan Vidar Krey"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179185,
                "name": "Lightning talk"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179203,
                "name": "Security"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "518120",
        "title": "Walk, Run, Fly - Take your build pipeline to the next level!",
        "description": "The promise of DevOps is to accelerate build times and enable faster software delivery. But that promise isn't always kept. Are you struggling to deliver all the committed roadmap items on time? Do you find yourself reworking the same logic because your feedback loop takes too long? \r\n\r\nJoin this session to learn why fast builds (both locally and in CI) are important for development teams, especially for mobile applications. We'll walk through the benefits of a mobile-specific CI/CD process. Then we'll introduce what top teams are doing and how you can get there through a walk, run, fly approach.\r\n\r\nYou'll walk away from this session with concrete steps to take your current CI/CD setup to the next level, allowing your team to deliver more features, faster.",
        "startsAt": "2023-09-14T11:15:00",
        "endsAt": "2023-09-14T11:35:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b3d457ed-73b1-471d-97d0-d287ec949656",
            "name": "Nick Sanjines"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179185,
                "name": "Lightning talk"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179189,
                "name": "CI/CD"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179202,
                "name": "Gradle"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "518043",
        "title": "Shared mobile UIs with Compose Multiplatform",
        "description": "Learn how you can use Compose Multiplatform to leverage familiar and well-established APIs from Jetpack Compose to build shared user interfaces for Android, iOS, and beyond – in 100% Kotlin. In this talk, you'll learn about the current state of Compose Multiplatform, get a feel for the technology during live demos and live coding examples, and learn what's needed for you to start your own cross-platform mobile UI experiments!",
        "startsAt": "2023-09-14T11:50:00",
        "endsAt": "2023-09-14T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a82c6942-6e2b-4d80-9883-0b84b932d6ef",
            "name": "Sebastian Aigner"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "515356",
        "title": "Measuring and Improving Performance: Insights from One of Cash App's Main Screens",
        "description": "Are you looking to track and improve the performance of specific customer flows in your app? We were at Cash App and in this talk I’ll walk through how we went about measuring, monitoring and improving the performance of one of Cash App’s main screens! I’ll discuss what metrics we tracked, how we set up alerting to ensure our product was healthy and how these checks set us up well for a future migration. Come join us to hear about what kind of instrumentation we considered and what made the final cut!",
        "startsAt": "2023-09-14T11:50:00",
        "endsAt": "2023-09-14T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fb25f3d5-103f-45ef-983a-414e583cea31",
            "name": "Colin Marsch"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179196,
                "name": "Testing"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "505414",
        "title": "Case Study: How Android Platform @ Reddit learned to stop worrying and embrace DevX",
        "description": "Successful platform teams are often caretakers of the developer experience and productivity. Explore some of the ways that the Reddit platform team has evolved its tooling and processes over time, and how we turned a platform with multi-hour build times into a hive of modest efficiency. Hear about what worked, what challenges were faced, and learn how you can help your organization evolve successfully over time, no matter the scale. \r\n\r\nKey Points: \r\n\r\nWhat We Monitor & How We Measure\r\n     * Quantitative and Qualitative Measures\r\n\r\nApproaches that improved our local build experience\r\n     * Better Code Organization\r\n     * Addressing the Pain of Context Switching \r\n     * Improved Build Times & Tools for Success\r\n     * Preventing Downstream Failures\r\n\r\nApproaches that improved our CI build experience\r\n     * Improved Workflow Organization\r\n     * Faster Runtimes / Parallelism / Sharding\r\n     * Improved Stability & Interactivity\r\n     * Self-Serve Tooling & Awareness (Bots, so many bots)\r\n\r\nApproaches that improved our test coverage and app quality\r\n     * Introducing a Full Testing Pyramid\r\n     * Observability and Enforcement of Code Coverage\r\n",
        "startsAt": "2023-09-14T11:50:00",
        "endsAt": "2023-09-14T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "5579f1f1-36c4-4a6f-95cf-7e6cbc70c981",
            "name": "Lauren Darcey"
          },
          {
            "id": "d5cc5ac8-8018-486b-baca-fea8dc920ba2",
            "name": "Fano Yong"
          },
          {
            "id": "804c572b-d091-483e-90f5-c203aec2aaac",
            "name": "Geoff Hackett"
          },
          {
            "id": "8e99653c-5933-42ba-868f-7b3ae1cdc95c",
            "name": "Eric Kuck"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179189,
                "name": "CI/CD"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179196,
                "name": "Testing"
              },
              {
                "id": 179202,
                "name": "Gradle"
              },
              {
                "id": 179204,
                "name": "Android Studio"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "495980",
        "title": "Reimagining text fields in Compose",
        "description": "The Compose Text team is completely rethinking the text field APIs from scratch. Come learn why, how we're approaching the process, and get a sneak peak at what the future might look like.\r\n\r\nIf you saw this talk in San Francisco, come see what’s new since June! We’ve been hard at work iterating on the APIs.",
        "startsAt": "2023-09-14T13:30:00",
        "endsAt": "2023-09-14T14:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a7014862-d295-4714-82ca-aee3201c22dc",
            "name": "Zach Klippenstein"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "518500",
        "title": "JDKs and SDKs",
        "description": "Confused by JDK versions in relation to Android, Gradle, Kotlin? Confused about targetSdk, minSdk, compileSdk? \r\n\r\nCome learn about the meaning of each, how the relate and what it means for your projects. ",
        "startsAt": "2023-09-14T13:30:00",
        "endsAt": "2023-09-14T14:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b308cbd1-215d-461a-8b10-8814798ab6f8",
            "name": "Michael Bailey"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179202,
                "name": "Gradle"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "491447",
        "title": "Beyond the Mockery: Why We Should Embrace Testing Without Mocking Frameworks",
        "description": "In software development, mocking is a popular technique used to simulate dependencies and test behaviour without relying on external systems. However, as with any technique, there are pros and cons to using mocks.\r\n\r\nIn this talk, I'll discuss why using mocks may not be the best approach and why we should instead use fakes or in-memory implementations of well-defined interfaces. We will explore the drawbacks of mocks, including how they can lead to brittle tests, slow down development, and make it difficult to refactor code.\r\n\r\nBy contrast, we will see how using fakes or in-memory implementations can provide faster feedback, increase confidence in the code, and make it easier to maintain tests as the codebase evolves. We will look at some examples of how to implement these alternatives, and how to make them useful in different testing scenarios.",
        "startsAt": "2023-09-14T13:30:00",
        "endsAt": "2023-09-14T14:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "10659767-356c-4cd5-ba9c-12cec7a3ce79",
            "name": "Ash Davies"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179184,
                "name": "Advanced"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179196,
                "name": "Testing"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "514136",
        "title": "Bare-Metal Cravings: How to get the most out of Android on Snapdragon",
        "description": "Android on Snapdragon is focused on making it easier for Android developers to add native-like capabilities to their applications. In this session you’ll see demos and examples on how to supercharge your camera and video applications on capable devices. We’ll also share how our collaboration with Google and Dolby exposes functionality in the most power-optimized way.\r\n \r\nJoin this session to find out how to get the most out of the device camera including:\r\no            Easily add HDR, AI, and low-light features to your camera app\r\no            Settings to capture the best camera shots\r\no            HW-optimized video playback",
        "startsAt": "2023-09-14T13:30:00",
        "endsAt": "2023-09-14T14:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0b3c23b8-5d85-42a8-9ea8-083b6a99c1dd",
            "name": "Michael Genewich"
          },
          {
            "id": "b2792623-bf90-43d2-bdb7-4c37c4f94bf3",
            "name": "Praveen Chavan"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179184,
                "name": "Advanced"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179191,
                "name": "AI/ML"
              },
              {
                "id": 179192,
                "name": "AR/VR"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179209,
                "name": "sponsor"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "522052",
        "title": "Practical Magic with Animations in Compose",
        "description": "Are you constantly in awe of the animations your designer creates but have no idea how to implement them? Or maybe you want to keep your users engaged by adding delightful little treats in your app... There are a few key principles that unlock a wide range of different animations, from basic to advanced.  We will go through some practical examples of how to implement animations in Jetpack Compose, such as working with gestures to control animations and how to do state based animations. Join us to learn how to think about implementing any animation in a step-by-step way. ",
        "startsAt": "2023-09-14T14:25:00",
        "endsAt": "2023-09-14T15:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "75244713-51c4-4977-82ea-25a4d340af26",
            "name": "Rebecca Franks"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179184,
                "name": "Advanced"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "504158",
        "title": "Kotlin Multiplatform: From “Hello World” to the Real World",
        "description": "By now you’ve surely heard of Kotlin Multiplatform, and maybe tried it out in a demo. Maybe you’ve even integrated some shared code into a production app. If you have, you know that there are many subtle complications that come up when you want to ship shared Kotlin code. This includes things like modularization, translating between Kotlin and Swift, managing multiple repositories that depend on each other, and optimizing build times and binary sizes. It’s not as easy as it looks when you write your first “Hello World”!\r\n\r\nAt Touchlab, we’ve been involved with Kotlin Multiplatform since the very beginning, and we’ve learned a thing or two along the way about what does and doesn’t work well. Come hear about how we’ve solved some of these difficulties to ship Multiplatform code across all sorts of organizations and environments, so you’re ready to use KMP in the real world.",
        "startsAt": "2023-09-14T14:25:00",
        "endsAt": "2023-09-14T15:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7a1d47f2-dfd1-4af1-b097-5c415f9b29c3",
            "name": "Russell Wolf"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "518557",
        "title": "Top Build Performance issues in Android projects - 2023 Edition",
        "description": "In this talk, we will discuss some of the top build performance issues that Android developers face, and provide solutions to these problems.\r\n\r\nWe will begin by explaining what the Gradle build cache is and how it works. We will then outline the common issues that developers encounter when using Gradle build cache.\r\n\r\nWe will then demonstrate combining the powerful Build Validation Scripts with automation and notifications to systematically surface new build cache misses and to keep them from reappearing once they have been fixed.\r\n\r\nWe will close by diving into Artifact Transform insights in Build Scan – the most commonly requested feature by Android developers – and by showing how you can use the new Tests API in Gradle Enterprise to automate your flaky test workflows.\r\n",
        "startsAt": "2023-09-14T14:25:00",
        "endsAt": "2023-09-14T15:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "dc1c88ef-dbfd-4b41-a567-7ce8e7645420",
            "name": "Inaki Villar"
          },
          {
            "id": "89694c9d-5de0-4f39-a50a-ed48d6eb56ca",
            "name": "Nelson Osacky"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "502323",
        "title": "Coroutines, Flow & Android: The Good Parts",
        "description": "In Kotlin Coroutines and Flow, there are many APIs and patterns that we have found either wrong or suboptimal in our work at Cash App and Square. You can’t build a complete application without these features, but our experience with coroutines at all levels of our applications has shown that not every part of Kotlin’s API is created equal for day-to-day use, nor is everything safe to use in all combinations. The good news is that we’ve also found that there is a bright and clear path: a core set of APIs and approaches (plus some small safety utilities around them) that we wholeheartedly endorse. We call these the “good parts” of coroutines, and if you use them you can write simpler control flow, more bulletproof error handling, and easy-to-understand concurrency.\r\n",
        "startsAt": "2023-09-14T14:25:00",
        "endsAt": "2023-09-14T15:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "339bb897-9203-4db4-8a31-c1c141ef5cc4",
            "name": "Bill Phillips"
          },
          {
            "id": "d5139721-f322-4900-a123-3be7791d318c",
            "name": "Stephen Edwards"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179198,
                "name": "Coroutines"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "518877",
        "title": "Building graphs in Jetpack Compose with Canvas",
        "description": "Building graphs can be a frustrating experience for a developer. Often in the interest of time an engineer is forced to introduce a third party library, and you are stuck with yet another dependency in your app. These libraries usually do a good job in allowing you to add a graph to your app. But in most cases, these graphing libraries never quite behave as you would like them to: custom highlighting and interactions if even possible require a great deal of hacking, labels sometimes feel as if they have a mind of their own, and the appearance is limited by the options provided to you by the library. The final 10% truly does take 90% of the time.\r\n\r\nJetpack Compose is a powerful tool. It empowers us to build truly reusable UI and shifts our thinking towards a declarative paradigm. In this talk I will share my experience in building a charting composable backed by canvas to match my team's use cases. The talk will cover inspiration, challenges, and design decisions faced throughout the process. I will show how by approaching graphing with a declarative mindset, developers are empowered to build reusable charts that look however they want them to. I will cover some useful and fun canvas functions. I hope developers will not feel intimidated, but will feel excited about the idea of using canvas in their apps. I will also share details on performance considerations and recomposition optimizations. ",
        "startsAt": "2023-09-14T15:25:00",
        "endsAt": "2023-09-14T16:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "38d0086b-c815-46af-9225-225dd1f7e80a",
            "name": "Cameron Jump"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "522329",
        "title": "Deep Dive Into Size Configuration Changes",
        "description": "Join for an in-depth look at the interesting and sometimes surprising behavior around Android’s size configuration changes for orientation, width, and height. Learn how to calculate the window size correctly, and the edge cases and drawbacks of other approaches, and how size configuration changes recreate activities, and how sometimes they don’t!",
        "startsAt": "2023-09-14T15:25:00",
        "endsAt": "2023-09-14T16:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "81ee4554-4839-4192-9a74-ecb32dff2819",
            "name": "Alex Vanyo"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "505169",
        "title": "Putting a Jetpack on your legacy codebase",
        "description": "At Pinterest, we are always working on using the latest technologies when possible in our 10+ year old codebase. Adding architecture components such as Hilt and Navigation without requiring everyone to rewrite their existing features can be quite a challenge. Hear about some of the techniques and challenges the platform team at Pinterest has had to use in order to adopt these new technologies under the hood.",
        "startsAt": "2023-09-14T15:25:00",
        "endsAt": "2023-09-14T16:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "355899b3-60c9-43ec-9b86-514d5ae81cb3",
            "name": "Kurt Nelson"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "504760",
        "title": "Pruning Your App: Good Practices for Reducing App Size",
        "description": "App size reduction should be a critical aspect of app development, and is especially necessary for end users who may have restricted device storage or limited data plans. However, it can be challenging for developers—especially those working with multiple contributing teams—to manage and visualize app size throughout the development flow. \r\n\r\nUsing the major telecom company app, Xfinity, as an example, we will take a deep dive into how to optimize app size. This app illustrates the complexities of size management: the app is used across the world in both high- and low-resourced contexts, requires multi-language support, and draws visual assets from regional partners.\r\n\r\nThis presentation will address the following tools and techniques, many of which have been used in the Xfinity development flow, and are broadly applicable to other development projects:\r\nImage compression: Using lossless compression with modern formats (.webp, vector graphics)\r\nUnused code and assets: Implementing code shrinkers (Google’s R8)\r\nModularizing app delivery: Dividing the app into smaller modules, downloaded on-demand as per user needs (Google’s Dynamic Feature Delivery)\r\nStrings: Improving string usage, including considerations for localization\r\nAnalysis: Monitoring app size throughout the development process\r\n",
        "startsAt": "2023-09-14T15:25:00",
        "endsAt": "2023-09-14T16:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "84335047-a7cd-437e-986f-1d6b6df31072",
            "name": "Chrystian Vieyra"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "518434",
        "title": "Unlocking the Power of Shaders in Android with AGSL and Jetpack Compose",
        "description": "Want to learn some new ways to create engaging, interactive, and visually stunning UIs?Shaders are scary but powerful tools that, when wielded correctly, can help us make some cool and complex effects. With the new AGSL, we can create custom programmable shaders that can really spruce up our Android apps and make our UIs pop!\r\n\r\nIn this talk, we will dive into the world of shaders and AGSL, and explore how we can use them in a practical way. We will cover some shader basics to build a foundation. Then we will learn a bit about AGSL and how we can setup Runtime Shaders in a Compose UI app. Finally we'll look at some really cool examples of shader-driven UI in the wild.\r\n\r\nKey Takeaways:\r\n-   Gain a deeper understanding of Shaders and AGSL\r\n-   Learn how to integrate shaders with Compose\r\n-   See some practical use-cases for shaders in an Android app\r\n-   Become comfortable with complex tech and push the boundaries of Android UIs\r\n\r\nLet's unlock our full potential as UI developers!",
        "startsAt": "2023-09-14T16:20:00",
        "endsAt": "2023-09-14T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7eca8832-05ec-44c0-b8cd-f8aa72fcf1a3",
            "name": "Rikin Marfatia"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "503770",
        "title": "Material You Review",
        "description": "The introduction of Material Design was one of the more exciting things to happen to Android in years. It established a simple design system that enabled developers to apply universal styling patterns to create pleasing UI with minimal effort. Material has evolved throughout the years. The newest generation of the standard is named Material You, and is integrated directly with Jetpack Compose. It is a natural complement to writing Kotlin code, and is the perfect dynamic design system for all Android, Web, and Desktop apps. \r\n\r\nThis session will be an introduction to design systems. I will discuss how you can apply color, typography, and dimension standards across your Applications universally. This results in a UI that is easy to refactor, aesthetically pleasing, and can be made a11y compliant. Using Material, I will explain fundamental aspects of design that will empower developers to feel more confident about UI, and enable better communication with designers.\r\n",
        "startsAt": "2023-09-14T16:20:00",
        "endsAt": "2023-09-14T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "69a59b62-b5f0-4aa3-b1bf-c9e557bfb18b",
            "name": "Mike Wolfson"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179195,
                "name": "Design"
              },
              {
                "id": 179204,
                "name": "Android Studio"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "494700",
        "title": "Reap the benefits of Android Studio",
        "description": "Most of Android engineers use Android studio as their IDE and every new version of AS release we get many efficient features that we miss to use which can help to code and debug efficiently. Let's look at the some of the nice features that are available in Android Studio.\r\nMany of us might already been tracking our crashes through Firebase Crashlytics, did you know that we can now view this reporting directly in Android studio. This makes it easy to launch the class directly from one click and fix the issues quickly. \r\nNow that we have all moved to Compose, lets deep dive into all the features we can use in Android for writing, debugging and testing compose UI such as \r\n\t•  Layout validation - visualize the lint errors on different screens. Verify localization for different languages\r\n\t• Device mirroring - Now we mirror our device and project the view through Android studio(do you still need vysor?? )\r\n\t• Resizable Emulator - we can now view our app in emulator by changing from phone to tablet or even foldable devices without have to create different emulator and run it each time.\r\n\t• Layout Inspector - able to see the recomposition counts and view the UI layer in 3D\r\n\t• Compose preview - Check the cool live updates and set dimensions to see the view for different screen sizes\r\n\t• Compose Tracing - helps to trace the compose views in System Trace profiler\r\nLogcat can be modified to different settings that help us to analyze the logs better\r\nStudio Bot - have an Android question?, ask Studio Bot which is available from Android studio version Hedgehog\r\n",
        "startsAt": "2023-09-14T16:20:00",
        "endsAt": "2023-09-14T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "e9c68304-ff7f-4a2e-837b-20bdacf8574a",
            "name": "Sweety Bertilla"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179204,
                "name": "Android Studio"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "503272",
        "title": "Powering up Dagger for Less Code and Cleaner Architecture",
        "description": "Dagger is a tool for generating dependencies…right? Nope, it can do a LOT more than that. Dagger’s ability to fine-tune graph lifecycle and associations, and link graphs to each other in tree relationships, is powerful enough to drive actual business logic and enforce separation of layers. The key is leveraging custom scopes, annotations, and subcomponents. Using them effectively makes complex apps simpler to write and maintain.\r\n\r\nAt Square, we’re building a new app that supports dynamically generated user flows at runtime. Instead of writing that logic into spaghetti, we leverage Dagger and Anvil to reduce the business logic we have to maintain. In this talk, I’ll cover:\r\n\r\n* How custom annotations help save code\r\n* Custom scopes and subcomponents, how they work, and how to use them to maintain clean architecture\r\n* How we scale this at the app-level, using Dagger to manage our navigation experience and keep our business logic layers clean.\r\n",
        "startsAt": "2023-09-14T16:20:00",
        "endsAt": "2023-09-14T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "265b1a56-e32c-459d-8580-6d0d4ed5fc63",
            "name": "Sumayyah Ahmed"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179199,
                "name": "Dagger"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "505425",
        "title": "Adopting Jetpack Compose @ Scale",
        "description": "Over the last couple years, thousands of apps have embraced Jetpack Compose for building their Android apps. While everyone is using the same library, the approach they've taken in adopting it is really different on each team. There's a lot of nuance in how one approaches a migration of this size and the difficulty is amplified when you are doing this at scale. \r\n\r\nThis panel discussion brings together engineers working on popular apps that are using Compose and their experience in coordinating it's adoption. ",
        "startsAt": "2023-09-15T09:00:00",
        "endsAt": "2023-09-15T10:00:00",
        "isServiceSession": false,
        "isPlenumSession": true,
        "speakers": [
          {
            "id": "0cdb0d8a-a6ae-49d5-8871-eec72234922c",
            "name": "Vinay Gaba"
          },
          {
            "id": "e2704d66-bfef-4a8b-893a-06b3092d6a05",
            "name": "Alejandro Sanchez"
          },
          {
            "id": "814138cf-aa0c-48e2-8f38-52b31c29a45b",
            "name": "Christina Lee"
          },
          {
            "id": "a7014862-d295-4714-82ca-aee3201c22dc",
            "name": "Zach Klippenstein"
          },
          {
            "id": "5579f1f1-36c4-4a6f-95cf-7e6cbc70c981",
            "name": "Lauren Darcey"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179213,
                "name": "Panel Discussion"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "514003",
        "title": "Trio: Compose Architecture with Mavericks",
        "description": "At Airbnb, we have developed a framework for Jetpack Compose screen architecture, which we call Trio. Trio is built on our open-source library, Mavericks, and it uniquely maintains navigation state within the ViewModel, co-locating navigation and business logic.\r\n\r\nTrio has been refined over the past two years and has been in use in production for over a year, now powering more than 150 screens.\r\n\r\nIn this talk, we will discuss the challenges of Compose-based architecture and how Trio has addressed these issues. We will explore:\r\n* Type-safe navigation between feature modules\r\n* Storing navigation state in a ViewModel\r\n* Communication between Compose-based screens, including opening screens for results and two-way communication between screens\r\n* Compile-time validation of navigation and communication interfaces\r\n* Testing screens with automated screenshot and interaction tests\r\n* Developer tools created to support Trio workflows\r\n\r\nJoin us as we share our experience with Trio and demonstrate how it has improved the Android development process at Airbnb.",
        "startsAt": "2023-09-15T10:20:00",
        "endsAt": "2023-09-15T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fc911ad9-69fc-40e9-bd99-45dc8fb4e44b",
            "name": "Eli Hart"
          },
          {
            "id": "f800d5e2-22bb-431d-986d-78576b140144",
            "name": "Yvonne Wong"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179200,
                "name": "Libraries"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "516338",
        "title": "Balancing Speed and Reliability: The Double-Edged Sword of Third-Party Libraries",
        "description": "Using third-party libraries in your apps can be a great way to save engineering time and move faster, but can also bring significant risk. If a library malfunctions and causes an outage, it may take days or weeks to get it solved for all your users. Apps have long update cycles and don’t have the luxury of hotfixes when something goes wrong. At Uber, as an app that people rely upon for making their income, getting to the doctor, or commuting to work, reliability in our app is the top priority. Learn how Uber decides when mobile libraries are safe to include and when they should be avoided.\r\n\r\nWe’ll review how Uber analyzes external libraries to reduce risk, walk through some horror stories when things went wrong, and discover some techniques that can help keep reliability for your user when the worst does happen. You’ll walk away with a tactical framework for evaluating libraries in your own apps.",
        "startsAt": "2023-09-15T10:20:00",
        "endsAt": "2023-09-15T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "6a3de662-ef86-4c62-bb68-2f7ebe607f76",
            "name": "Ty Smith"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179184,
                "name": "Advanced"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "517177",
        "title": "Plugging into Anvil and powering up your dependency injection",
        "description": "Writing Dagger code can produce cumbersome boilerplate and Anvil helps to reduce some of it, but isn’t a magic solution. However, Anvil does provide a handy plugin API that developers can leverage to largely eliminate repetitive boilerplate. Explore some of the ways that Reddit leverages this API to improve the developer experience around dependency injection and how you can apply these learnings to your own projects.",
        "startsAt": "2023-09-15T10:20:00",
        "endsAt": "2023-09-15T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "de68551c-a180-464b-95d8-1e41d02509a8",
            "name": "Drew Heavner"
          },
          {
            "id": "f2be88fb-c6aa-4846-8106-d2b14f9888d5",
            "name": "Ben Dowden"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179184,
                "name": "Advanced"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179199,
                "name": "Dagger"
              },
              {
                "id": 179207,
                "name": "Modularization"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "503142",
        "title": "Getting your apps ready for Material 3",
        "description": "Material 3 is Google’s latest and newest design system. However, using or adopting Material 3 in Android apps might be a bit challenging.\r\n\r\nIn this talk, we will see how we can use the Material 3 design system with the Material components in Android apps. Firstly, we will talk about the color system and typography in Material 3 and discuss the differences with Material 2. Then, we will see how to use Material 3 components both in the Android View system and Jetpack Compose. Moreover, we will touch upon how to migrate to Material 3 from Material 2 and, share the experiences for Material 3 migration of our banking apps. Finally, we will argue about the pros & cons of using Material 3.",
        "startsAt": "2023-09-15T10:20:00",
        "endsAt": "2023-09-15T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0480588f-3fc1-42d8-8905-907865f73ef9",
            "name": "Odin Asbjornsen"
          },
          {
            "id": "5f7faf69-dd61-4ad6-b6d8-0173cae292d8",
            "name": "Fatih Giriş"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "522808",
        "title": "SBA: Journey to a New Architecture",
        "description": "Architectures, like behavior, are a study of 1. The particular needs and culture of any given company combine to mean that a single architecture, no matter how theoretically sound, is unlikely to ever be universally successful or applicable. But that doesn't mean there isn't a lot to be learned by hearing about the what's and why's of the architectures of those around us.\r\n\r\nFor the past year, Pinterest has been working on a new architecture called the State Based Architecture (SBA) to supersede our existing MVP framework. While similar in style to industry trends seen at other companies, it diverges in a few opinionated and meaningful ways and we'd love to discuss why. While we can't promise the choices we made will be right for you, we can share the details about which ones we prioritized, what alternatives we weighed, and why we ultimately made the decisions we made with the hopes that it provides food for thought in your own development projects.",
        "startsAt": "2023-09-15T11:15:00",
        "endsAt": "2023-09-15T11:55:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "814138cf-aa0c-48e2-8f38-52b31c29a45b",
            "name": "Christina Lee"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "504531",
        "title": "Kotlin/Native for Android developers",
        "description": "Kotlin/Native is being used by Kotlin Multiplatform when producing library for iOS (among other native targets). When I moved from writing Android apps in Java to writing iOS apps in Objective-C, I was lost and desperately tried to find commonalities between JVM and Native, to ease the pain.\r\n\r\nIn this talk I'd like to take you on a journey through the native world. We'll look at the main differences from JVM, how linking works and some best practices to keep in mind when working with binaries.",
        "startsAt": "2023-09-15T11:15:00",
        "endsAt": "2023-09-15T11:55:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "969813cd-0231-4310-9c61-745967bd94c5",
            "name": "Tadeas Kriz"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179202,
                "name": "Gradle"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "496329",
        "title": "90s Website …  in 2023 on mobile in Compose … for science",
        "description": "Why  would anyone build something with a 90s website aesthetic - in Compose? Nostalgia? For one the 90s website aesthetic made heavy use of animations and visual effects. So emulating this style will take any animation framework through its paces. This talk will take some of the most iconic 90s website elements and demonstrate how to reproduce them to build  a retro mobile experience using Jetpack Compose. \r\n\r\nI can’t promise the end result will have a good user experience but I can promise a good look at the animation system in Compose and a collection of cheesy code snippets.",
        "startsAt": "2023-09-15T11:15:00",
        "endsAt": "2023-09-15T11:55:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "2313d8eb-7d6e-444d-8e8d-4d223f896ce8",
            "name": "Maia Grotepass"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179193,
                "name": "Android"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "505142",
        "title": "Designing for Disconnection: The Mental Model of Offline Apps",
        "description": "In today's interconnected world we developers rely on our users to have strong networks for the best app experience. Empty states and error states perforate our designs and view systems. What if there was another way? What if we gave users more control? Adding offline support to an app that was built to be online only is a challenge, but a surmountable one.\r\n\r\nYou’ll learn how to reframe the mental model of your app and walk away with strategies for incrementally adding offline support, how to avoid key stumbling points, and the benefits you will bring to your users!\r\n",
        "startsAt": "2023-09-15T11:15:00",
        "endsAt": "2023-09-15T11:55:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "598e1141-ce68-4cb2-8e9d-d8c9f5add09c",
            "name": "Matt McKenna"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "500356",
        "title": "Fireside Chat with Google Developers Expert",
        "description": "Join us for an engaging Fireside Chat with Madona, Google Developer Expert Android(GDE), as we delve into mostly asked questions about how to become a GDE.\r\n\r\nMadona will share her experiences and insights on becoming an Android Expert and how this enhances one's career. In addition, during this Fireside Chat, Madona will engage in thought-provoking discussions as she explores the challenges and opportunities Android developers face in today's rapidly evolving ecosystem.\r\n\r\nFinally, Madona will share practical tips, industry insights, and real-world examples, empowering attendees to create high-quality, user-friendly Android applications.\r\n\r\nThis interactive session encourages audience participation, enabling you to ask questions.",
        "startsAt": "2023-09-15T12:10:00",
        "endsAt": "2023-09-15T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "986c8c91-986c-420b-a555-04347e366539",
            "name": "Madona Wambua"
          },
          {
            "id": "b552006b-241d-4d1b-a67d-b5c89ef258e1",
            "name": "Moyinoluwa Adeyemi"
          },
          {
            "id": "8500ffde-a07d-40ad-8c9f-e35b97359bee",
            "name": "Sierra OBryan"
          },
          {
            "id": "265b1a56-e32c-459d-8580-6d0d4ed5fc63",
            "name": "Sumayyah Ahmed"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179182,
                "name": "Introductory and overview"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179185,
                "name": "Lightning talk"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "519087",
        "title": "Major Savings with App Startup Shaving",
        "description": "Amazon has stated that every 100ms of latency costs them 1% of revenue in sales.  It goes without saying that there is a strong incentive to improve startup time for their business.  What could long startup times be costing us?  User engagement, user retention, app store ranking, the list goes on.  \r\n\r\nApp startup speed is paramount for delivering a seamless user experience alongside driving business success.  We will go over how to start improving your app startup duration with examples ranging from less than 10 lines of code to multi-module solutions.  \r\n\r\nCome learn about the tips & tricks to shave hundreds of milliseconds off of your startup time.",
        "startsAt": "2023-09-15T12:10:00",
        "endsAt": "2023-09-15T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "603911a5-7070-4b63-badd-d83001716824",
            "name": "John Li"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179185,
                "name": "Lightning talk"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179198,
                "name": "Coroutines"
              },
              {
                "id": 179199,
                "name": "Dagger"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "516499",
        "title": "Boosting Compose UI from Sluggish to Snappy",
        "description": "Join us on an enlightening quest as we unravel the realm of Compose UI performance. With a multitude of tools at our disposal, the challenge lies in knowing where to start and how to choose. Together, we'll diagnose and optimize a flawed app in real-time, providing you with practical insights and guidelines to navigate the world of Compose UI performance!\r\n\r\nAgenda:\r\n- Introducing the Janky App: Showcasing the flawed app and its evident performance issues.\r\n- Performance Toolkit: Exploring diagnostic tools like Layout Inspector, Systrace, etc.\r\n- Live Coding Demonstration: Real-time diagnosis and optimization of the janky app to improve its performance.\r\n- Assessing Performance: Evaluating the app's performance before and after optimization.\r\n- Building the Runbook & Discussing Performance Pitfalls: Creating a troubleshooting guide for common Compose UI performance bottlenecks, with strategies to avoid them.\r\n\r\nBy journey's end, you'll know where to start and what tools to start with to diagnose and fix common performance issues in your Compose UI!",
        "startsAt": "2023-09-15T13:30:00",
        "endsAt": "2023-09-15T14:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "cdc513e8-cd46-49d8-a3d1-ac2ec53d11c6",
            "name": "Tasha Ramesh"
          },
          {
            "id": "a82de654-53d7-4c16-989a-5efddf36983e",
            "name": "Akshay Chordiya"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "480952",
        "title": "Coupling Compose: Interoperability in a Legacy Codebase",
        "description": "Struggling to use Compose in the context of an existing XML view codebase? Looking for ways you can convince higher-ups at your company that Compose should be the standard for front-end Android development? \u2028\u2028\r\n\r\nWhile Jetpack Compose has tons of developmental advantages, it can be tricky to justify changing what works in a legacy codebase. This talk will follow the case of using Compose within a legacy architecture as well as using Java XML views within Compose UI components. Compose is often shown in the context of replacing legacy views entirely - this presentation aims to prove that you can add it in any level of existing UI, and discuss the effects of utilizing Compose alongside legacy code. ",
        "startsAt": "2023-09-15T13:30:00",
        "endsAt": "2023-09-15T14:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "28257859-b5d6-4d51-b299-a6e33efaca84",
            "name": "Dan Peluso"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179195,
                "name": "Design"
              },
              {
                "id": 179200,
                "name": "Libraries"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "513447",
        "title": "Managing state beyond ViewModels and Hilt",
        "description": "Separation of concerns is a common best practice followed by all successful software projects. In Android applications, there is usually a UI layer, a data layer, and a domain layer. Given the infinite number of ways to implement these layers, it's not clear how to get started quickly. Therefore, many projects follow Google's high-level guide to app architecture, which suggests many reasonable defaults and best practices. But how do the proposed recommendations work in practice? How do you set up an architecture that is ready for your use cases with this guide in mind? Are suggestions such as using Hilt as the backbone for your architecture really a good recommendation?\r\n\r\nThis talk will discuss best practices for taking ownership of your own architecture, decoupling your business logic from Android components, and creating and managing scopes for your use cases. There will be concrete advice on how to loosely couple classes in the data and domain layers, how to prevent memory and thread leaks, and how to adopt the dependency injection framework of your choice. ",
        "startsAt": "2023-09-15T13:30:00",
        "endsAt": "2023-09-15T14:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "646237bf-ccc5-43fa-a659-0b361b08d651",
            "name": "Ralf Wondratschek"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179196,
                "name": "Testing"
              },
              {
                "id": 179198,
                "name": "Coroutines"
              },
              {
                "id": 179199,
                "name": "Dagger"
              },
              {
                "id": 179200,
                "name": "Libraries"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "516288",
        "title": "Getting ready for Kotlin Context Receivers",
        "description": "Context Receivers are a Kotlin language feature that will be stable with the release of Kotlin 2.0 / K2. They may fundamentally change the way some of the libraries you use and the code that you write could be written, especially around Compose.  This session will get you up-to-speed on what Context are and how they work under the hood.",
        "startsAt": "2023-09-15T13:30:00",
        "endsAt": "2023-09-15T14:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "31fc3c23-dc47-4937-bef5-4ecac667377e",
            "name": "Brent Watson"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "521133",
        "title": "Modern Compose Architecture with Circuit",
        "description": "Compose is revolutionizing UI development...but why stop there? At Slack we’ve developed a new Compose-first open source architecture called Circuit. In this talk, I'll detail how Circuit works and how it can be used to power UI *and* business logic with Compose to make writing applications (and their tests!) simple and easy.\r\n\r\nOh, and multiplatform 😁",
        "startsAt": "2023-09-15T14:25:00",
        "endsAt": "2023-09-15T15:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "00a0e3a5-18a0-4044-a41c-e40e5f31f847",
            "name": "Kieran Elliott"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179196,
                "name": "Testing"
              },
              {
                "id": 179198,
                "name": "Coroutines"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "527095",
        "title": "What's new in Paparazzi?",
        "description": "Since last Droidcon NYC, Paparazzi has seen continued increased adoption across the Android community!\r\n\r\nIn this talk, John will give an overview of how it works, followed by an update on what the Cash App Android team has been working on since then, including:\r\n\r\n* Resource and asset loading improvements\r\n* Video snapshot support\r\n* Snapshots from @Previews\r\n* Compose Multiplatform support\r\n\r\n...and more!\r\n\r\nBackground:\r\n\r\nPaparazzi is an Android testing library that allows you to render your application screens without a physical device or emulator!\r\n\r\nIt has been immensely improving the Android UI testing loop on Cash App and other well-known apps since 2019 by allowing you to refactor your screens with confidence while running blazingly fast on the JVM versus navigating on slow devices.",
        "startsAt": "2023-09-15T14:25:00",
        "endsAt": "2023-09-15T15:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "903c7a65-63f0-4244-8f8c-7ab8f7acae75",
            "name": "John Rodriguez"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179195,
                "name": "Design"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "516438",
        "title": "Improving Android Developer Experience with Gradle Build Scans",
        "description": "As a developer, you just want your builds to work but every now and then things go wrong and you need to investigate the build. That investigation sucks up a lot of your time and forces context switching. In this talk we show how build scans can help save a lot of time when you need to find build performance bottlenecks, investigate/troubleshoot CI and build/tool chain failures, visualize your dependencies, etc. to troubleshoot/investigate build issues and accelerate your builds/tests.\r\n\r\nFrom this session you will learn…\r\n- What are Gradle Build Scans?\r\n- When and why would you use a Build Scan?\r\n- Getting started with Build Scans\r\n- Demo: How can I accelerate investigating/troubleshooting Build/CI issues?\r\n- What’s happening in my build (Build Scan Walkthrough)\r\n- What are Tags and Custom Values\r\n- Remote Troubleshooting and collaborating with a colleague\r\n- Troubleshooting Build, CI and Test Failures\r\n- Viewing and Investigating Dependencies\r\n- Viewing and Investigating Plugins and Infrastructure details\r\n- Gradle build tool switches - what features of Gradle Build Tool am I using\r\n- Capturing Android Instrumented / UI tests in the Build Scan test report\r\n- How do I investigate Build Slowdowns and Performance related issues?\r\n- What is a build cache and what are the different Gradle cache types\r\n- Demo: Investigating build performance, parallelization, build cache, timeline view\r\n- Build Caching for custom tasks\r\n- Build Validation Scripts\r\n- Artifact Transforms in Build Scans\r\n",
        "startsAt": "2023-09-15T14:25:00",
        "endsAt": "2023-09-15T15:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "128253aa-c170-4a08-816e-66b3521b889f",
            "name": "Rooz Mohazzabi"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179189,
                "name": "CI/CD"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179202,
                "name": "Gradle"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "516710",
        "title": "Performance Monitoring: 0 to 60 in 40 Minutes",
        "description": "How fast is your app? If you don't have data that answers that question, the answer likely isn't one you or your users are happy with. But knowing what to measure - and how - can be a challenge.\r\n\r\nIn this talk, you'll learn strategies for measuring your app's performance, aggregating metrics data, and contextualizing that data in order to generate actionable insights that will benefit your users.",
        "startsAt": "2023-09-15T14:25:00",
        "endsAt": "2023-09-15T15:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "69bc255b-5690-4a5b-93c8-6b93ad1eb636",
            "name": "Eder Bastos"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "496499",
        "title": "Migrating Android apps from Fragments to Jetpack Compose with Nibel",
        "description": "While the engineering community is excited about adopting Jetpack Compose, in reality, we all have existing codebases that rely on a legacy UI stack.\r\n\r\nIn this talk, I will share how we designed a Jetpack Compose architecture at Turo that provides seamless integration in the existing fragment-based codebase. It is now available as Nibel - an open-source navigation library.\r\n\r\nI will cover how we leveraged the power of Kotlin Symbol Processing (KSP) API to build an abstraction over the navigation that enables easy multi-module navigation out-of-the-box and covers the following navigation scenarios:\r\n• fragment to compose\r\n• compose to compose\r\n• compose to fragment",
        "startsAt": "2023-09-15T15:25:00",
        "endsAt": "2023-09-15T16:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "e851ff26-d617-416f-81d4-943bad64139a",
            "name": "Pavlo Stavytskyi"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179207,
                "name": "Modularization"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "489813",
        "title": "Bootstrapping Simple Server Driven Ui from a Design System",
        "description": "In this talk, we will dive into the concept of using a design system to bootstrap a server-driven UI implementation using Compose on Android and SwiftUI on iOS. We will explore the benefits of bootstrapping SDUi from a design system. We'll discuss the advantages and limitations of this approach.\r\n\r\nIn addition, we'll also talk about how Kotlin Multiplatform can be used to build some interesting tooling around server-driven UI. We'll explore some examples of such tooling and discuss how it can help in streamlining the development process.\r\n\r\nAttendees will learn the key concepts and techniques involved in using a design system to bootstrap a server-driven UI implementation.",
        "startsAt": "2023-09-15T15:25:00",
        "endsAt": "2023-09-15T16:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "16656dd2-a23b-42d1-8cb8-c9a1e593dd6c",
            "name": "Ahmed El-Helw"
          },
          {
            "id": "5574663f-8366-4445-a2db-789474c8ef55",
            "name": "Abdulahi Osoble"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179195,
                "name": "Design"
              },
              {
                "id": 179205,
                "name": "UI/UX"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "515752",
        "title": "Android Studio Focus Mode: Supercharging Gradle Syncs with AAR Substitution and IDE Plugins",
        "description": "Gradle sync times frequently present a bottleneck in Android development. Despite recent improvements to Gradle, Android Studio, and a highly modularized project, developers at Airbnb often found themselves spending up to seven minutes simply syncing code in Android Studio.\r\n\r\nTo address this, Airbnb's developer platform team recently introduced \"AAR syncs\", a method that substitutes over 90% of the code the average developer syncs and loads into Android Studio with pre-built binaries. This technique has reduced sync time by more than 60%. It also spurred the development of an IDE plugin that ensures only the minimal set of code is loaded in the IDE with just the click of a button, and bridges the complexities of arbitrarily mixing project modules with AARs. This project has become known as \"Android Studio Focus Mode\", and was the most frequently cited improvement in Android development according to Airbnb's recent internal developer survey.\r\n\r\nKey Takeaways:\r\n\r\n- Understand the strategic role of feature-based modularization in enabling performant infrastructure\r\n- Discover the Gradle APIs and CI infrastructure required to enable AAR publishing and substitution in your projects\r\n- See how to leverage Android Studio (IntelliJ) plugins to create custom infrastructure that integrates seamlessly into your development experience, as though it were a native Android Studio feature\r\n\r\nAdditionally, this talk will provide insights into how a larger Android team approaches a major infrastructure project, from ideation to execution. It will equip attendees with a strategy to implement a similar system within their own companies.",
        "startsAt": "2023-09-15T15:25:00",
        "endsAt": "2023-09-15T16:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a3ef3fa1-0017-4aba-a700-a089f7b47669",
            "name": "Ben Schwab"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179202,
                "name": "Gradle"
              },
              {
                "id": 179204,
                "name": "Android Studio"
              },
              {
                "id": 179207,
                "name": "Modularization"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "517190",
        "title": "Multiplatform USB: How to Communicate Seamlessly",
        "description": "At the droidcon Berlin we as the GDG Berlin Android introduced 'ZeBadge' a digital name badge, programmed by a companion Android app.\r\n\r\nSadly it was limited to only Android companions. But not anymore! Let me introduce ZeKompanion: A multiplatform app that communicates with ZeBadge, no matter the platform (except for iOS).\r\n\r\nThis talk will guide through the architecture of the app, describing the abstractions taken and explain how you can leverage Kotlin Multiplatform for Mobile to abstract the platform specific USB communication from the Compose UI displayed on all devices.\r\n\r\nFollow here for an interesting journey about USB Serial communication, Kotlin and KMM, Jetpack Compose and how to boil it all together into one app: ZeKompanion.\r\n",
        "startsAt": "2023-09-15T15:25:00",
        "endsAt": "2023-09-15T16:05:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fc80cf34-563e-4cd4-a04d-23d1191a7812",
            "name": "Mario Bodemann"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179195,
                "name": "Design"
              },
              {
                "id": 179200,
                "name": "Libraries"
              },
              {
                "id": 179202,
                "name": "Gradle"
              },
              {
                "id": 179204,
                "name": "Android Studio"
              },
              {
                "id": 179207,
                "name": "Modularization"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "497587",
        "title": "Building Shared UIs Across Platforms With Compose",
        "description": "Jetpack Compose is a modern UI toolkit that simplifies the process of building Android apps. With its declarative approach, developers can create beautiful and responsive UIs using Kotlin, with less boilerplate and more flexibility.\r\n\r\nBut what if you want to extend your app's reach beyond Android? With Jetpack Compose Multiplatform, you can now use Compose to build UIs for iOS and Desktop platforms as well.\r\n\r\nIn this talk, we will go over the process of setting up Jetpack Compose Multiplatform and show how to architect an app where the UI is shared using the library. We will also discuss the limitations and benefits of using this approach, and provide tips and tricks for debugging and testing.\r\n\r\nIf you're interested in learning how to create multiplatform apps with Jetpack Compose, this talk is for you!",
        "startsAt": "2023-09-15T16:20:00",
        "endsAt": "2023-09-15T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a79f3682-df5c-40e4-8aa8-1b6eaa7bdeec",
            "name": "Mohit Sarveiya"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179198,
                "name": "Coroutines"
              },
              {
                "id": 179200,
                "name": "Libraries"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36243,
        "room": "Paris Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "516815",
        "title": "Web and Android United: Kotlin-Powered Cross-Platform Excellence",
        "description": "Dive into the heart of multiplatform app development in this talk, grounded in my experience building for both Android and the web. I'll reveal how Kotlin, with its powerful Coroutines and Flow, can efficiently handle asynchronous tasks and data streams, enabling seamless code-sharing across platforms.\r\n\r\nThe session will then focus on building backend processes in a multiplatform environment. We'll examine effective strategies for constructing simple architectures that promote efficient cross-platform development.\r\n\r\nFinally, I'll share unique programming patterns I've discovered during my journey. These patterns significantly simplify simultaneous targeting of Android and web platforms. Whether a seasoned developer or a beginner in multiplatform development, this talk will share insights on enhancing your toolkit and development approach.",
        "startsAt": "2023-09-15T16:20:00",
        "endsAt": "2023-09-15T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "878ec0bb-f4d7-4b83-a9af-ff6e359a35dc",
            "name": "Etienne Caron"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179190,
                "name": "Cross-Platform"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179198,
                "name": "Coroutines"
              },
              {
                "id": 179206,
                "name": "Firebase"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36244,
        "room": "Dubai Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "498425",
        "title": "Monitor App performance using Jetpack Benchmark",
        "description": "Android apps are becoming increasingly complex, and it can be difficult to ensure that they perform well. Jetpack Benchmark is a Jetpack library that helps you measure the performance of your Android app code. It is part of Android SDK and can be used to benchmark your code.\r\n\r\nIn this talk, I will discuss how to use Jetpack Benchmark to measure the performance of an Android app. I will cover both macro and micro benchmark testcases, and I will show how to interpret the results of the benchmarks. I will also discuss some of the best practices for improving the performance of your Android app.\r\n\r\nAudience:\r\n\r\nThis talk is intended for Android developers who are interested in improving the performance of their apps. No prior experience with Jetpack Benchmark is required.\r\n\r\nAgenda:\r\n\r\n-Introduction to Jetpack Benchmark\r\n-Macrobenchmark testcases\r\n-Microbenchmark testcases\r\n-Interpreting benchmark results\r\n-Best practices for improving performance\r\n\r\nTakeaways:\r\n\r\nBy the end of this talk, attendees will be able to:\r\n\r\n-Understand how to use Jetpack Benchmark to measure the performance of their Android app\r\n-Create macro and micro benchmark testcases\r\n-Interpret the results of their benchmarks\r\n-Apply best practices for improving the performance of their Android app\r\n",
        "startsAt": "2023-09-15T16:20:00",
        "endsAt": "2023-09-15T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0f8d6ab4-97d4-416c-b554-f1f0f929574b",
            "name": "Sagar Das"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179188,
                "name": "Tooling"
              },
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179196,
                "name": "Testing"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 36245,
        "room": "Tokyo Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      },
      {
        "questionAnswers": [],
        "id": "502104",
        "title": "Maximizing Revenue with Robust Billing: A deep dive into Google Billing Integration",
        "description": "In this technical deep-dive, I share my hands-on experience rewriting the entire billing integration for a high-growth tech company using the Google Billing Library on Android. Our overhaul paved the way for faster feature integrations and reduced refunds. This was achieved by leveraging functional programming techniques, coroutines, unit testing, and a use case architecture to construct a reliable, robust, and resilient system.\r\n\r\nAttendees will gain insights into:\r\n\r\nStreamlining Billing Systems: Understand the complexities and challenges involved in rewriting an entire billing integration from scratch. Learn how to plan, execute, and navigate potential pitfalls in such a refactor.\r\n\r\nFunctional Programming & Coroutines: Discover how using functional programming techniques and coroutines can enhance your development process, simplify concurrency, and make your code more maintainable.\r\n\r\nRobust Fallback Mechanisms: Learn how to design efficient fallback mechanisms to ensure purchases are processed, even when unexpected interruptions occur during the app lifecycle. This process greatly improved our customer experience and resulted in a decrease in automatic refunds.\r\n\r\nUse Case Architecture: Delve into the use of use case architecture, a design pattern that improves code readability, maintainability, and testability, and how it played a key role in our successful integration.\r\n\r\nMonitoring: The monitoring & logging we put in place before the rewrite to make sure we didn't degrade the user experience or purchase conversions, and also to quantify any lifts we generated.\r\n\r\nWith over 8 years of Android development experience and having successfully deployed this billing system to millions of users, I bring a wealth of real-world knowledge and learnings to share with attendees. This discussion will be especially beneficial to those working on or interested in large-scale app development and monetization strategies. Regardless of your familiarity with Kotlin, functional programming, unit testing, or Google's Billing Library, you'll walk away with actionable insights and strategies to enhance your Android development toolkit.",
        "startsAt": "2023-09-15T16:20:00",
        "endsAt": "2023-09-15T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ad946ec6-c029-4f07-866e-a5e2f402eae7",
            "name": "Ryan Newsom"
          }
        ],
        "categories": [
          {
            "id": 52053,
            "name": "Level",
            "categoryItems": [
              {
                "id": 179183,
                "name": "Intermediate"
              }
            ],
            "sort": 0
          },
          {
            "id": 52054,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 179186,
                "name": "Session"
              }
            ],
            "sort": 1
          },
          {
            "id": 52055,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 179193,
                "name": "Android"
              },
              {
                "id": 179194,
                "name": "Kotlin"
              },
              {
                "id": 179196,
                "name": "Testing"
              },
              {
                "id": 179198,
                "name": "Coroutines"
              },
              {
                "id": 179200,
                "name": "Libraries"
              },
              {
                "id": 179201,
                "name": "Functional Programming"
              }
            ],
            "sort": 5
          }
        ],
        "roomId": 38343,
        "room": "Sydney Room",
        "liveUrl": null,
        "recordingUrl": null,
        "status": "Accepted"
      }
    ],
    "isDefault": false
  }
]